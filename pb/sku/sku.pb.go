// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: pb/sku.proto

package sku

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CommonRsp) Reset() {
	*x = CommonRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sku_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonRsp) ProtoMessage() {}

func (x *CommonRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sku_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonRsp.ProtoReflect.Descriptor instead.
func (*CommonRsp) Descriptor() ([]byte, []int) {
	return file_pb_sku_proto_rawDescGZIP(), []int{0}
}

func (x *CommonRsp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CommonRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SkuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId      []string `protobuf:"bytes,1,rep,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	PageNumber uint64   `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize   uint64   `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *SkuReq) Reset() {
	*x = SkuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sku_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuReq) ProtoMessage() {}

func (x *SkuReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sku_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuReq.ProtoReflect.Descriptor instead.
func (*SkuReq) Descriptor() ([]byte, []int) {
	return file_pb_sku_proto_rawDescGZIP(), []int{1}
}

func (x *SkuReq) GetSkuId() []string {
	if x != nil {
		return x.SkuId
	}
	return nil
}

func (x *SkuReq) GetPageNumber() uint64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *SkuReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SkuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonRsp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Data   []*SkuInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Total  uint32     `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SkuResp) Reset() {
	*x = SkuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sku_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuResp) ProtoMessage() {}

func (x *SkuResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sku_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuResp.ProtoReflect.Descriptor instead.
func (*SkuResp) Descriptor() ([]byte, []int) {
	return file_pb_sku_proto_rawDescGZIP(), []int{2}
}

func (x *SkuResp) GetCommon() *CommonRsp {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *SkuResp) GetData() []*SkuInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SkuResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SkuInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId       string `protobuf:"bytes,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	SkuName     string `protobuf:"bytes,2,opt,name=sku_name,json=skuName,proto3" json:"sku_name,omitempty"`
	SkuImage    string `protobuf:"bytes,3,opt,name=sku_image,json=skuImage,proto3" json:"sku_image,omitempty"`
	ItemId      uint32 `protobuf:"varint,4,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ItemName    string `protobuf:"bytes,5,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	ProductId   uint32 `protobuf:"varint,6,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductName string `protobuf:"bytes,7,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	Ctime       uint32 `protobuf:"varint,8,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Mtime       uint32 `protobuf:"varint,9,opt,name=mtime,proto3" json:"mtime,omitempty"`
}

func (x *SkuInfo) Reset() {
	*x = SkuInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sku_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuInfo) ProtoMessage() {}

func (x *SkuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sku_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuInfo.ProtoReflect.Descriptor instead.
func (*SkuInfo) Descriptor() ([]byte, []int) {
	return file_pb_sku_proto_rawDescGZIP(), []int{3}
}

func (x *SkuInfo) GetSkuId() string {
	if x != nil {
		return x.SkuId
	}
	return ""
}

func (x *SkuInfo) GetSkuName() string {
	if x != nil {
		return x.SkuName
	}
	return ""
}

func (x *SkuInfo) GetSkuImage() string {
	if x != nil {
		return x.SkuImage
	}
	return ""
}

func (x *SkuInfo) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SkuInfo) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *SkuInfo) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *SkuInfo) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *SkuInfo) GetCtime() uint32 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *SkuInfo) GetMtime() uint32 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

// 此处应该还要修改
type CreateSkuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId       string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ItemNam      string `protobuf:"bytes,2,opt,name=item_nam,json=itemNam,proto3" json:"item_nam,omitempty"`
	ProductId    string `protobuf:"bytes,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductName  string `protobuf:"bytes,4,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	InventoryQty uint32 `protobuf:"varint,5,opt,name=inventory_qty,json=inventoryQty,proto3" json:"inventory_qty,omitempty"`
}

func (x *CreateSkuReq) Reset() {
	*x = CreateSkuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sku_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSkuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSkuReq) ProtoMessage() {}

func (x *CreateSkuReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sku_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSkuReq.ProtoReflect.Descriptor instead.
func (*CreateSkuReq) Descriptor() ([]byte, []int) {
	return file_pb_sku_proto_rawDescGZIP(), []int{4}
}

func (x *CreateSkuReq) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *CreateSkuReq) GetItemNam() string {
	if x != nil {
		return x.ItemNam
	}
	return ""
}

func (x *CreateSkuReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *CreateSkuReq) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *CreateSkuReq) GetInventoryQty() uint32 {
	if x != nil {
		return x.InventoryQty
	}
	return 0
}

type GetItemInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId       uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ItemName     string `protobuf:"bytes,2,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	CategoryId   uint32 `protobuf:"varint,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	CategoryName string `protobuf:"bytes,4,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
	ShopId       uint32 `protobuf:"varint,5,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
}

func (x *GetItemInfoReq) Reset() {
	*x = GetItemInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sku_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemInfoReq) ProtoMessage() {}

func (x *GetItemInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sku_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemInfoReq.ProtoReflect.Descriptor instead.
func (*GetItemInfoReq) Descriptor() ([]byte, []int) {
	return file_pb_sku_proto_rawDescGZIP(), []int{5}
}

func (x *GetItemInfoReq) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *GetItemInfoReq) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *GetItemInfoReq) GetCategoryId() uint32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *GetItemInfoReq) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *GetItemInfoReq) GetShopId() uint32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

type GetItemInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonRsp  `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Data   []*ItemInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Total  uint32      `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetItemInfoResp) Reset() {
	*x = GetItemInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sku_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemInfoResp) ProtoMessage() {}

func (x *GetItemInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sku_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemInfoResp.ProtoReflect.Descriptor instead.
func (*GetItemInfoResp) Descriptor() ([]byte, []int) {
	return file_pb_sku_proto_rawDescGZIP(), []int{6}
}

func (x *GetItemInfoResp) GetCommon() *CommonRsp {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetItemInfoResp) GetData() []*ItemInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetItemInfoResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId       uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ItemName     string `protobuf:"bytes,2,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	CategoryId   uint32 `protobuf:"varint,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	CategoryName string `protobuf:"bytes,4,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
	ShopId       uint32 `protobuf:"varint,5,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
}

func (x *ItemInfo) Reset() {
	*x = ItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sku_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemInfo) ProtoMessage() {}

func (x *ItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sku_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemInfo.ProtoReflect.Descriptor instead.
func (*ItemInfo) Descriptor() ([]byte, []int) {
	return file_pb_sku_proto_rawDescGZIP(), []int{7}
}

func (x *ItemInfo) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ItemInfo) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *ItemInfo) GetCategoryId() uint32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *ItemInfo) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *ItemInfo) GetShopId() uint32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

type CreateOrUpdateItemInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId      uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ItemName    string `protobuf:"bytes,2,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	CategoryId  uint32 `protobuf:"varint,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	CategoryNam string `protobuf:"bytes,4,opt,name=category_nam,json=categoryNam,proto3" json:"category_nam,omitempty"`
	ShopId      uint32 `protobuf:"varint,5,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
}

func (x *CreateOrUpdateItemInfoReq) Reset() {
	*x = CreateOrUpdateItemInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sku_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrUpdateItemInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrUpdateItemInfoReq) ProtoMessage() {}

func (x *CreateOrUpdateItemInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sku_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrUpdateItemInfoReq.ProtoReflect.Descriptor instead.
func (*CreateOrUpdateItemInfoReq) Descriptor() ([]byte, []int) {
	return file_pb_sku_proto_rawDescGZIP(), []int{8}
}

func (x *CreateOrUpdateItemInfoReq) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *CreateOrUpdateItemInfoReq) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *CreateOrUpdateItemInfoReq) GetCategoryId() uint32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *CreateOrUpdateItemInfoReq) GetCategoryNam() string {
	if x != nil {
		return x.CategoryNam
	}
	return ""
}

func (x *CreateOrUpdateItemInfoReq) GetShopId() uint32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

type SkuInventoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId []string `protobuf:"bytes,1,rep,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
}

func (x *SkuInventoryReq) Reset() {
	*x = SkuInventoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sku_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuInventoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuInventoryReq) ProtoMessage() {}

func (x *SkuInventoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sku_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuInventoryReq.ProtoReflect.Descriptor instead.
func (*SkuInventoryReq) Descriptor() ([]byte, []int) {
	return file_pb_sku_proto_rawDescGZIP(), []int{9}
}

func (x *SkuInventoryReq) GetSkuId() []string {
	if x != nil {
		return x.SkuId
	}
	return nil
}

type SkuInventoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonRsp          `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Data   []*SkuInventoryInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SkuInventoryResp) Reset() {
	*x = SkuInventoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sku_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuInventoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuInventoryResp) ProtoMessage() {}

func (x *SkuInventoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sku_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuInventoryResp.ProtoReflect.Descriptor instead.
func (*SkuInventoryResp) Descriptor() ([]byte, []int) {
	return file_pb_sku_proto_rawDescGZIP(), []int{10}
}

func (x *SkuInventoryResp) GetCommon() *CommonRsp {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *SkuInventoryResp) GetData() []*SkuInventoryInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type SkuInventoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId        string `protobuf:"bytes,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	InventoryQty uint32 `protobuf:"varint,2,opt,name=inventory_qty,json=inventoryQty,proto3" json:"inventory_qty,omitempty"`
	DamageQty    uint32 `protobuf:"varint,3,opt,name=damage_qty,json=damageQty,proto3" json:"damage_qty,omitempty"`
}

func (x *SkuInventoryInfo) Reset() {
	*x = SkuInventoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sku_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuInventoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuInventoryInfo) ProtoMessage() {}

func (x *SkuInventoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sku_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuInventoryInfo.ProtoReflect.Descriptor instead.
func (*SkuInventoryInfo) Descriptor() ([]byte, []int) {
	return file_pb_sku_proto_rawDescGZIP(), []int{11}
}

func (x *SkuInventoryInfo) GetSkuId() string {
	if x != nil {
		return x.SkuId
	}
	return ""
}

func (x *SkuInventoryInfo) GetInventoryQty() uint32 {
	if x != nil {
		return x.InventoryQty
	}
	return 0
}

func (x *SkuInventoryInfo) GetDamageQty() uint32 {
	if x != nil {
		return x.DamageQty
	}
	return 0
}

type UpdateSkuInventoryInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId        string `protobuf:"bytes,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	InventoryQty uint32 `protobuf:"varint,2,opt,name=inventory_qty,json=inventoryQty,proto3" json:"inventory_qty,omitempty"`
	DamageQty    uint32 `protobuf:"varint,3,opt,name=damage_qty,json=damageQty,proto3" json:"damage_qty,omitempty"`
}

func (x *UpdateSkuInventoryInfoReq) Reset() {
	*x = UpdateSkuInventoryInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sku_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSkuInventoryInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSkuInventoryInfoReq) ProtoMessage() {}

func (x *UpdateSkuInventoryInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sku_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSkuInventoryInfoReq.ProtoReflect.Descriptor instead.
func (*UpdateSkuInventoryInfoReq) Descriptor() ([]byte, []int) {
	return file_pb_sku_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateSkuInventoryInfoReq) GetSkuId() string {
	if x != nil {
		return x.SkuId
	}
	return ""
}

func (x *UpdateSkuInventoryInfoReq) GetInventoryQty() uint32 {
	if x != nil {
		return x.InventoryQty
	}
	return 0
}

func (x *UpdateSkuInventoryInfoReq) GetDamageQty() uint32 {
	if x != nil {
		return x.DamageQty
	}
	return 0
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sku_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sku_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_pb_sku_proto_rawDescGZIP(), []int{13}
}

type GetShopInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId   uint32 `protobuf:"varint,1,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	ShopName string `protobuf:"bytes,2,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
}

func (x *GetShopInfoReq) Reset() {
	*x = GetShopInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sku_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShopInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShopInfoReq) ProtoMessage() {}

func (x *GetShopInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sku_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShopInfoReq.ProtoReflect.Descriptor instead.
func (*GetShopInfoReq) Descriptor() ([]byte, []int) {
	return file_pb_sku_proto_rawDescGZIP(), []int{14}
}

func (x *GetShopInfoReq) GetShopId() uint32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *GetShopInfoReq) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

type GetShopInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common   *CommonRsp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	ShopId   uint32     `protobuf:"varint,2,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	ShopName string     `protobuf:"bytes,3,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
}

func (x *GetShopInfoResp) Reset() {
	*x = GetShopInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sku_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShopInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShopInfoResp) ProtoMessage() {}

func (x *GetShopInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sku_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShopInfoResp.ProtoReflect.Descriptor instead.
func (*GetShopInfoResp) Descriptor() ([]byte, []int) {
	return file_pb_sku_proto_rawDescGZIP(), []int{15}
}

func (x *GetShopInfoResp) GetCommon() *CommonRsp {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetShopInfoResp) GetShopId() uint32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *GetShopInfoResp) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

type CreateShopReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId   uint32 `protobuf:"varint,1,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	ShopName string `protobuf:"bytes,2,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
}

func (x *CreateShopReq) Reset() {
	*x = CreateShopReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sku_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShopReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShopReq) ProtoMessage() {}

func (x *CreateShopReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sku_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShopReq.ProtoReflect.Descriptor instead.
func (*CreateShopReq) Descriptor() ([]byte, []int) {
	return file_pb_sku_proto_rawDescGZIP(), []int{16}
}

func (x *CreateShopReq) GetShopId() uint32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *CreateShopReq) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

type UpdateShopReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId   uint32 `protobuf:"varint,1,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	ShopName string `protobuf:"bytes,2,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
}

func (x *UpdateShopReq) Reset() {
	*x = UpdateShopReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sku_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShopReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShopReq) ProtoMessage() {}

func (x *UpdateShopReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sku_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShopReq.ProtoReflect.Descriptor instead.
func (*UpdateShopReq) Descriptor() ([]byte, []int) {
	return file_pb_sku_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateShopReq) GetShopId() uint32 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *UpdateShopReq) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

var File_pb_sku_proto protoreflect.FileDescriptor

var file_pb_sku_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x62, 0x2f, 0x73, 0x6b, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03,
	0x73, 0x6b, 0x75, 0x22, 0x31, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x5d, 0x0a, 0x06, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71,
	0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x69, 0x0a, 0x07, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x26, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70,
	0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x53, 0x6b, 0x75,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0xfc, 0x01, 0x0a, 0x07, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06,
	0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6b,
	0x75, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x6b, 0x75, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x22,
	0xa9, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x4e, 0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x51, 0x74, 0x79, 0x22, 0xa5, 0x01, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68,
	0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x68, 0x6f,
	0x70, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73,
	0x6b, 0x75, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9f, 0x01, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x19, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61,
	0x6d, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x0f, 0x53, 0x6b,
	0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a,
	0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x6b, 0x75, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x10, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6d, 0x0a, 0x10, 0x53,
	0x6b, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x51, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x51, 0x74, 0x79, 0x22, 0x76, 0x0a, 0x19, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x71, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x51, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x71, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x51,
	0x74, 0x79, 0x22, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68,
	0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x06, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x6b, 0x75, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68,
	0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x45,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x69, 0x0a, 0x0a, 0x53, 0x6b, 0x75, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0b, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x0c,
	0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x11, 0x2e,
	0x73, 0x6b, 0x75, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71,
	0x1a, 0x0e, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70,
	0x32, 0xcb, 0x01, 0x0a, 0x0b, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x38, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x13, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x73,
	0x6b, 0x75, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x73,
	0x6b, 0x75, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e,
	0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x0e,
	0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x32, 0xf3,
	0x04, 0x0a, 0x13, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x6b, 0x75,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x2e,
	0x73, 0x6b, 0x75, 0x2e, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x16, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b,
	0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x61, 0x67, 0x61, 0x12, 0x1e,
	0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x0e,
	0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x50,
	0x0a, 0x1e, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x53, 0x61, 0x67, 0x61, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x12, 0x1e, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x75,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x1a, 0x0e, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70,
	0x12, 0x4a, 0x0a, 0x18, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x63, 0x63, 0x54, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x73,
	0x6b, 0x75, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x73,
	0x6b, 0x75, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x1b,
	0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x54, 0x63, 0x63, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x6b,
	0x75, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x73, 0x6b,
	0x75, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x1d, 0x44,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x54, 0x63, 0x63, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1e, 0x2e, 0x73,
	0x6b, 0x75, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x73,
	0x6b, 0x75, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x14,
	0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x58, 0x61, 0x12, 0x1e, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x73, 0x70, 0x32, 0xb3, 0x01, 0x0a, 0x0b, 0x53, 0x68, 0x6f, 0x70, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f,
	0x70, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68,
	0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x2e, 0x73, 0x6b, 0x75, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x73, 0x6b, 0x75,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x42, 0x2c, 0x0a, 0x21, 0x63, 0x6f,
	0x6d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x6b, 0x75, 0x72, 0x70, 0x63, 0x50,
	0x01, 0x5a, 0x05, 0x2e, 0x2f, 0x73, 0x6b, 0x75, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_sku_proto_rawDescOnce sync.Once
	file_pb_sku_proto_rawDescData = file_pb_sku_proto_rawDesc
)

func file_pb_sku_proto_rawDescGZIP() []byte {
	file_pb_sku_proto_rawDescOnce.Do(func() {
		file_pb_sku_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_sku_proto_rawDescData)
	})
	return file_pb_sku_proto_rawDescData
}

var file_pb_sku_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_pb_sku_proto_goTypes = []interface{}{
	(*CommonRsp)(nil),                 // 0: sku.CommonRsp
	(*SkuReq)(nil),                    // 1: sku.SkuReq
	(*SkuResp)(nil),                   // 2: sku.SkuResp
	(*SkuInfo)(nil),                   // 3: sku.SkuInfo
	(*CreateSkuReq)(nil),              // 4: sku.CreateSkuReq
	(*GetItemInfoReq)(nil),            // 5: sku.GetItemInfoReq
	(*GetItemInfoResp)(nil),           // 6: sku.GetItemInfoResp
	(*ItemInfo)(nil),                  // 7: sku.ItemInfo
	(*CreateOrUpdateItemInfoReq)(nil), // 8: sku.CreateOrUpdateItemInfoReq
	(*SkuInventoryReq)(nil),           // 9: sku.SkuInventoryReq
	(*SkuInventoryResp)(nil),          // 10: sku.SkuInventoryResp
	(*SkuInventoryInfo)(nil),          // 11: sku.SkuInventoryInfo
	(*UpdateSkuInventoryInfoReq)(nil), // 12: sku.UpdateSkuInventoryInfoReq
	(*Response)(nil),                  // 13: sku.Response
	(*GetShopInfoReq)(nil),            // 14: sku.GetShopInfoReq
	(*GetShopInfoResp)(nil),           // 15: sku.GetShopInfoResp
	(*CreateShopReq)(nil),             // 16: sku.CreateShopReq
	(*UpdateShopReq)(nil),             // 17: sku.UpdateShopReq
}
var file_pb_sku_proto_depIdxs = []int32{
	0,  // 0: sku.SkuResp.common:type_name -> sku.CommonRsp
	3,  // 1: sku.SkuResp.data:type_name -> sku.SkuInfo
	0,  // 2: sku.GetItemInfoResp.common:type_name -> sku.CommonRsp
	7,  // 3: sku.GetItemInfoResp.data:type_name -> sku.ItemInfo
	0,  // 4: sku.SkuInventoryResp.common:type_name -> sku.CommonRsp
	11, // 5: sku.SkuInventoryResp.data:type_name -> sku.SkuInventoryInfo
	0,  // 6: sku.GetShopInfoResp.common:type_name -> sku.CommonRsp
	1,  // 7: sku.SkuService.GetSkuInfo:input_type -> sku.SkuReq
	4,  // 8: sku.SkuService.CreateSkuInfo:input_type -> sku.CreateSkuReq
	5,  // 9: sku.ItemService.GetItemInfo:input_type -> sku.GetItemInfoReq
	8,  // 10: sku.ItemService.CreateItemInfo:input_type -> sku.CreateOrUpdateItemInfoReq
	8,  // 11: sku.ItemService.UpdateItemInfo:input_type -> sku.CreateOrUpdateItemInfoReq
	9,  // 12: sku.SkuInventoryService.GetSkuInventoryInfo:input_type -> sku.SkuInventoryReq
	12, // 13: sku.SkuInventoryService.UpdateSkuInventoryInfo:input_type -> sku.UpdateSkuInventoryInfoReq
	12, // 14: sku.SkuInventoryService.DeductSkuInventorySaga:input_type -> sku.UpdateSkuInventoryInfoReq
	12, // 15: sku.SkuInventoryService.DeductSkuInventorySagaRollback:input_type -> sku.UpdateSkuInventoryInfoReq
	12, // 16: sku.SkuInventoryService.DeductSkuInventoryTccTry:input_type -> sku.UpdateSkuInventoryInfoReq
	12, // 17: sku.SkuInventoryService.DeductSkuInventoryTccSubmit:input_type -> sku.UpdateSkuInventoryInfoReq
	12, // 18: sku.SkuInventoryService.DeductSkuInventoryTccRollback:input_type -> sku.UpdateSkuInventoryInfoReq
	12, // 19: sku.SkuInventoryService.DeductSkuInventoryXa:input_type -> sku.UpdateSkuInventoryInfoReq
	14, // 20: sku.ShopService.GetShopInfo:input_type -> sku.GetShopInfoReq
	16, // 21: sku.ShopService.CreateShopInfo:input_type -> sku.CreateShopReq
	17, // 22: sku.ShopService.UpdateShopInfo:input_type -> sku.UpdateShopReq
	2,  // 23: sku.SkuService.GetSkuInfo:output_type -> sku.SkuResp
	0,  // 24: sku.SkuService.CreateSkuInfo:output_type -> sku.CommonRsp
	6,  // 25: sku.ItemService.GetItemInfo:output_type -> sku.GetItemInfoResp
	0,  // 26: sku.ItemService.CreateItemInfo:output_type -> sku.CommonRsp
	0,  // 27: sku.ItemService.UpdateItemInfo:output_type -> sku.CommonRsp
	10, // 28: sku.SkuInventoryService.GetSkuInventoryInfo:output_type -> sku.SkuInventoryResp
	0,  // 29: sku.SkuInventoryService.UpdateSkuInventoryInfo:output_type -> sku.CommonRsp
	0,  // 30: sku.SkuInventoryService.DeductSkuInventorySaga:output_type -> sku.CommonRsp
	0,  // 31: sku.SkuInventoryService.DeductSkuInventorySagaRollback:output_type -> sku.CommonRsp
	0,  // 32: sku.SkuInventoryService.DeductSkuInventoryTccTry:output_type -> sku.CommonRsp
	0,  // 33: sku.SkuInventoryService.DeductSkuInventoryTccSubmit:output_type -> sku.CommonRsp
	0,  // 34: sku.SkuInventoryService.DeductSkuInventoryTccRollback:output_type -> sku.CommonRsp
	0,  // 35: sku.SkuInventoryService.DeductSkuInventoryXa:output_type -> sku.CommonRsp
	15, // 36: sku.ShopService.GetShopInfo:output_type -> sku.GetShopInfoResp
	0,  // 37: sku.ShopService.CreateShopInfo:output_type -> sku.CommonRsp
	0,  // 38: sku.ShopService.UpdateShopInfo:output_type -> sku.CommonRsp
	23, // [23:39] is the sub-list for method output_type
	7,  // [7:23] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_pb_sku_proto_init() }
func file_pb_sku_proto_init() {
	if File_pb_sku_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_sku_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sku_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sku_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sku_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sku_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSkuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sku_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sku_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sku_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sku_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrUpdateItemInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sku_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuInventoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sku_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuInventoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sku_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuInventoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sku_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSkuInventoryInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sku_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sku_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShopInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sku_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShopInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sku_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateShopReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sku_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateShopReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_sku_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_pb_sku_proto_goTypes,
		DependencyIndexes: file_pb_sku_proto_depIdxs,
		MessageInfos:      file_pb_sku_proto_msgTypes,
	}.Build()
	File_pb_sku_proto = out.File
	file_pb_sku_proto_rawDesc = nil
	file_pb_sku_proto_goTypes = nil
	file_pb_sku_proto_depIdxs = nil
}
